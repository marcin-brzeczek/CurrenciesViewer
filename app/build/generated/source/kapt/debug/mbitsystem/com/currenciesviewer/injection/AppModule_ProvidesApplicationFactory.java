// Generated by Dagger (https://google.github.io/dagger).
package mbitsystem.com.currenciesviewer.injection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import mbitsystem.com.currenciesviewer.InitApp;

public final class AppModule_ProvidesApplicationFactory implements Factory<InitApp> {
  private final AppModule module;

  public AppModule_ProvidesApplicationFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public InitApp get() {
    return provideInstance(module);
  }

  public static InitApp provideInstance(AppModule module) {
    return proxyProvidesApplication(module);
  }

  public static AppModule_ProvidesApplicationFactory create(AppModule module) {
    return new AppModule_ProvidesApplicationFactory(module);
  }

  public static InitApp proxyProvidesApplication(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.providesApplication(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
