// Generated by Dagger (https://google.github.io/dagger).
package mbitsystem.com.currenciesviewer.data;

import dagger.internal.Factory;
import javax.inject.Provider;
import mbitsystem.com.currenciesviewer.data.network.CurrenciesApi;

public final class CurrencyInteractor_Factory implements Factory<CurrencyInteractor> {
  private final Provider<CurrenciesApi> currenciesApiProvider;

  public CurrencyInteractor_Factory(Provider<CurrenciesApi> currenciesApiProvider) {
    this.currenciesApiProvider = currenciesApiProvider;
  }

  @Override
  public CurrencyInteractor get() {
    return provideInstance(currenciesApiProvider);
  }

  public static CurrencyInteractor provideInstance(Provider<CurrenciesApi> currenciesApiProvider) {
    return new CurrencyInteractor(currenciesApiProvider.get());
  }

  public static CurrencyInteractor_Factory create(Provider<CurrenciesApi> currenciesApiProvider) {
    return new CurrencyInteractor_Factory(currenciesApiProvider);
  }

  public static CurrencyInteractor newCurrencyInteractor(CurrenciesApi currenciesApi) {
    return new CurrencyInteractor(currenciesApi);
  }
}
